* tic-tac-toe

** summary
   to finish this projects,what i should do is:
*** TODO game UI
**** put chess
**** judge the win or loss
**** restart the game
*** TODO states store tree
**** node
***** attributes
      | parent node | a point point to the parent node          |
      | child node  | a point point to the child node           |
      | next node   | the point point to the next node          |
      | states      | the state of the game board               |
      | depth       | the depth of the current node in the tree |
      | q-value     | q value of every action of the state      | 
      
**** tree
***** attributes
      | head node | the head node of the tree |
***** function
      | instert   | insert a node to the tree    |
      | find node | find the node we want to get |

*** TODO Q function
[[./a.png]]
new Q value equals the sum of the previous Q value and the learned value


*** TODO policy pi
**** random choose an action
     
**** choose the optimal policy

*** TODO value update and main function
